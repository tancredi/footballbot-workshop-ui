{
  "name": "slug",
  "description": "slugifies even utf-8 chars!",
  "version": "0.5.0",
  "homepage": "https://github.com/dodo/node-slug",
  "author": {
    "name": "dodo",
    "url": "https://github.com/dodo"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/dodo/node-slug.git"
  },
  "main": "slug.js",
  "engines": {
    "node": ">= 0.4.x"
  },
  "keywords": [
    "slugify",
    "slug",
    "string",
    "utf8",
    "utf-8",
    "unicode",
    "url"
  ],
  "scripts": {
    "test": "mocha ./test/*.test.* --require should --reporter spec --colors --compilers coffee:coffee-script/register"
  },
  "dependencies": {
    "unicode": ">= 0.3.1"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "should": "~3.1.2",
    "coffee-script": "~1.7.1"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/dodo/node-slug/raw/master/LICENSE"
    }
  ],
  "readme": "# [slug](https://github.com/dodo/node-slug)\n\nslugifies every string, even when it contains unicode!\n\nMake strings url-safe.\n\n- respecting [RFC 3986](https://tools.ietf.org/html/rfc3986)\n- Comprehensive tests\n- No dependencies (except the unicode table)\n- Not in coffee-script (except the tests lol)\n- Coerces foreign symbols to their english equivalent\n- Works in browser (window.slug) and AMD/CommonJS-flavoured module loaders (except the unicode symbols unless you use browserify but who wants to download a ~2mb js file, right?)\n\n```\nnpm install slug\n```\n\n## example\n\n```javascript\nvar slug = require('slug')\nvar print = console.log.bind(console, '>')\n\nprint(slug('i ♥ unicode'))\n// > i-love-unicode\n\nprint(slug('unicode ♥ is ☢')) // yes!\n// > unicode-love-is-radioactive\n\nprint(slug('i ♥ unicode', '_')) // If you prefer something else then `-` as seperator\n// > i_love_unicode\n\nslug.charmap['♥'] = 'freaking love' // change default charmap or use option {charmap:{…}} as 2. argument\nprint(slug('I ♥ UNICODE').toLowerCase()) // If you prefer lower case\n// > i-freaking-love-unicode\n```\n\n## options\n\n```javascript\n// options is either object or replacement (sets options.replacement)\nslug('string', [{options} || 'replacement']);\n```\n\n```javascript\nslug.defaults = {\n    replacement: '-',      // replace spaces with replacement\n    symbols: true,         // replace unicode symbols or not\n    charmap: slug.charmap, // replace special characters\n};\n```\n\n[![Build Status](https://secure.travis-ci.org/dodo/node-slug.png)](http://travis-ci.org/dodo/node-slug)\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/dodo/node-slug/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dodo/node-slug/issues"
  },
  "_id": "slug@0.5.0",
  "_shasum": "5942e67e84d6a34c5d07b94dcad6891b59ec979c",
  "_from": "slug@^0.5.0",
  "_resolved": "https://registry.npmjs.org/slug/-/slug-0.5.0.tgz"
}
